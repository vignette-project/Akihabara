on: [push, pull_request]
name: Continuous Integration

jobs:
  test:
    name: Test
    runs-on: ${{matrix.os.fullname}}
    env:
      PROJECT_NAME: Akihabara
      NET_ENV: net5.0
    strategy:
      fail-fast: false
      matrix:
        os:
          - { prettyname: Windows, fullname: windows-latest }
          - { prettyname: Linux, fullname: ubuntu-latest }
        accel:
          - { prettyname: GPU, name: gpu }
          - { prettyname: CPU, name: cpu }
    steps:
      - name: Cache Bazel directory
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: ~/.cache/bazel
          key: ${{runner.os}}-${{env.cache-name}}-dev

      - name: Cache build directory
        uses: actions/cache@v2
        env:
          cache-name: build-cache
        with:
          path: build
          key: ${{runner.os}}-${{env.cache-name}}-dev

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      # FIXME: Setup will fail if you use a Python version lower than 3.9
      - name: Force Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Mesa GPU libraries
        if: ${{ matrix.accel_name == 'gpu' && matrix.os.prettyname == 'Linux' }}
        run: sudo apt-get install mesa-common-dev libegl1-mesa-dev libgles2-mesa-dev

      - name: Build (Native, Windows)
        if: ${{ matrix.accel_name != 'gpu' && matrix.os.prettyname == 'Windows' }}
        run: |
          echo "Setting PYTHON_BIN_PATH to python in PATH"
          $env:PYTHON_BIN_PATH=(Get-Command python).Path
          echo $env:PYTHON_BIN_PATH
          pip install numpy
          python build.py build --desktop ${{ matrix.accel.name }} --opencv=cmake -vv

      - name: Build (Native, *nix)
        if: ${{ matrix.os.prettyname != 'Windows' }}
        run: |
          pip install numpy
          python build.py build --desktop ${{ matrix.accel.name }} --opencv=cmake -vv

      - name: Build (.NET)
        run: dotnet build -c Debug src/Akihabara.sln
      
      - name: Copy libmediapipe_c.* into ${{env.PROJECT_NAME}}.Tests
        run: cp $pwd/src/${{env.PROJECT_NAME}}/bin/Debug/${{env.NET_ENV}}/libmediapipe_c.* $pwd/src/${{env.PROJECT_NAME}}.Tests/bin/Debug/${{env.NET_ENV}}/

      - name: Test (non-GPU)
        if: ${{ matrix.accel.name != 'gpu' }}
        run: dotnet test --filter TestCategory!=GpuOnlyTest "$pwd/src/${{env.PROJECT_NAME}}.Tests" --logger "trx;LogFileName=TestResults-${{matrix.os.prettyname}}.trx"
        shell: pwsh

      - name: Test (GPU)
        if: ${{ matrix.accel.name == 'gpu' && matrix.os.prettyname == 'Linux' }}
        run: dotnet test "$pwd/src/${{env.PROJECT_NAME}}.Tests" --logger "trx;LogFileName=TestResults-${{matrix.os.prettyname}}-gpu.trx"
        shell: pwsh

      # Attempt to upload results even if test fails.
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#always
      - name: Upload Test Results (${{matrix.os.prettyname}})
        uses: actions/upload-artifact@v2
        with:
          name: TestResults-${{matrix.os.prettyname}}
          path: ${{github.workspace}}/TestResults/TestResults-${{matrix.os.prettyname}}*.trx

      # The contents of the build folder
      - name: Upload Build Artifacts (${{matrix.os.prettyname}})
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-${{matrix.os.prettyname}}
          path: build/
